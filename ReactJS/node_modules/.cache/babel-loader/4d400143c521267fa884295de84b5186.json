{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\WEB_MINI_PROJECT\\\\web\\\\ReactJS\\\\src\\\\routes\\\\Course.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHttpClient } from \"../Hooks/Http-Hook\";\nimport \"./Course.css\";\nimport CourseList from \"./CourseList\";\nimport ErrorModel from '../UIelements/Error';\nimport LoadingSpinner from '../UIelements/LoadingSpinner';\nimport { useHistory } from \"react-router-dom\";\n\nconst Course = () => {\n  _s();\n\n  const [type, setType] = useState(\"\");\n  const [course, setcourse] = useState([]);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const history = useHistory();\n\n  const typeHandler = async () => {\n    setType(\"TECHNICAL\");\n    let list2;\n\n    try {\n      list2 = await sendRequest(`http://localhost:5000/course`, 'POST', {\n        'Content-Type': 'application/json'\n      }, JSON.stringify({\n        type: \"T\"\n      }));\n      console.log(list2);\n      setcourse(list2);\n    } catch (err) {\n      console.log(\"course error\\n\" + err);\n    }\n  };\n\n  const type2Handler = async () => {\n    setType(\"TECHNICAL\");\n    let list2;\n\n    try {\n      list2 = await sendRequest(`http://localhost:5000/course`, 'POST', {\n        'Content-Type': 'application/json'\n      }, JSON.stringify({\n        type: \"A\"\n      }));\n      console.log(list2);\n      setcourse(list2);\n    } catch (err) {\n      console.log(\"course error\\n\" + err);\n    }\n  };\n\n  const type3Handler = async () => {\n    setType(\"TECHNICAL\");\n    let list2;\n\n    try {\n      list2 = await sendRequest(`http://localhost:5000/course`, 'POST', {\n        'Content-Type': 'application/json'\n      }, JSON.stringify({\n        type: \"H\"\n      }));\n      console.log(list2);\n      setcourse(list2);\n    } catch (err) {\n      console.log(\"course error\\n\" + err);\n    }\n  };\n\n  const form = () => {\n    history.push('/form');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModel, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: \"5%\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COURSES YOU WANT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: typeHandler,\n          children: \"Aptitude series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: type2Handler,\n          children: \"Technical series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: type3Handler,\n          children: \"HR round series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: form,\n          children: \"New Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CourseList, {\n        items: course,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Course, \"MCaxruEQAIjn1+oAH7OU89Bq320=\", false, function () {\n  return [useHttpClient, useHistory];\n});\n\n_c = Course;\nexport default Course;\n\nvar _c;\n\n$RefreshReg$(_c, \"Course\");","map":{"version":3,"sources":["D:/WEB_MINI_PROJECT/web/ReactJS/src/routes/Course.js"],"names":["React","useState","useHttpClient","CourseList","ErrorModel","LoadingSpinner","useHistory","Course","type","setType","course","setcourse","isLoading","error","sendRequest","clearError","history","typeHandler","list2","JSON","stringify","console","log","err","type2Handler","type3Handler","form","push","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import React,{ useState } from \"react\";\r\nimport { useHttpClient } from \"../Hooks/Http-Hook\"\r\nimport \"./Course.css\"\r\nimport CourseList from \"./CourseList\";\r\nimport ErrorModel from '../UIelements/Error';\r\nimport LoadingSpinner from '../UIelements/LoadingSpinner'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Course=()=>{\r\n    const [type,setType]=useState(\"\");\r\n    const [course,setcourse]=useState([]);\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const history=useHistory();\r\n    \r\n    const typeHandler=async ()=>{\r\n        setType(\"TECHNICAL\");\r\n        let list2;\r\n        try{\r\n                list2=await sendRequest(\r\n                    `http://localhost:5000/course`,\r\n                    'POST',\r\n                    {'Content-Type':'application/json'},\r\n                    JSON.stringify({\r\n                        type:\"T\"\r\n                    })\r\n                    \r\n                    );\r\n                    console.log(list2);\r\n                    setcourse(list2)\r\n            }\r\n            catch(err){\r\n                console.log(\"course error\\n\"+err);\r\n            }\r\n     \r\n    }\r\n\r\n    const type2Handler=async ()=>{\r\n        setType(\"TECHNICAL\");\r\n        let list2;\r\n        try{\r\n                list2=await sendRequest(\r\n                    `http://localhost:5000/course`,\r\n                    'POST',\r\n                    {'Content-Type':'application/json'},\r\n                    JSON.stringify({\r\n                        type:\"A\"\r\n                    })\r\n                    \r\n                    );\r\n                    console.log(list2);\r\n                    setcourse(list2)\r\n            }\r\n            catch(err){\r\n                console.log(\"course error\\n\"+err);\r\n            }\r\n    }\r\n    const type3Handler=async ()=>{\r\n        setType(\"TECHNICAL\");\r\n        let list2;\r\n        try{\r\n                list2=await sendRequest(\r\n                    `http://localhost:5000/course`,\r\n                    'POST',\r\n                    {'Content-Type':'application/json'},\r\n                    JSON.stringify({\r\n                        type:\"H\"\r\n                    })\r\n                    \r\n                    );\r\n                    console.log(list2);\r\n                    setcourse(list2)\r\n            }\r\n            catch(err){\r\n                console.log(\"course error\\n\"+err);\r\n            }\r\n    }\r\n    const form=()=>{\r\n        history.push('/form');\r\n    }\r\n    \r\n    return(\r\n        <React.Fragment>\r\n        {error && <ErrorModel error={error} onClear={clearError}/>}\r\n        {isLoading && <LoadingSpinner asOverlay/>}\r\n        <div style={{paddingTop:\"5%\",textAlign:\"center\"}}>\r\n            <h1>COURSES YOU WANT</h1>\r\n            <div class=\"btn-group\">\r\n            <button onClick={typeHandler}>Aptitude series</button>\r\n            <button onClick={type2Handler}>Technical series</button>\r\n            <button onClick={type3Handler}>HR round series</button>\r\n             {<button onClick={form}>New Course</button>}\r\n            </div>\r\n            <CourseList items={course} type={type}/>\r\n        </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Course;"]},"metadata":{},"sourceType":"module"}