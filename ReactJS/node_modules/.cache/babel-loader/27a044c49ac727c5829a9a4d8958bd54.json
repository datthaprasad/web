{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\WEB_MINI_PROJECT\\\\web\\\\ReactJS\\\\src\\\\routes\\\\Drive.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { AuthContext } from '../Hooks/AuthContext';\nimport LoadingSpinner from '../UIelements/LoadingSpinner';\nimport { useHttpClient } from \"../Hooks/Http-Hook\";\nimport \"./Drive.css\";\nimport DriveList from \"./DriveList\";\nimport ErrorModal from '../UIelements/Error';\nimport { useHistory } from 'react-router-dom';\n\nconst Drive = async () => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const auth = useContext(AuthContext);\n  useEffect(() => {\n    document.body.style.background = \"none\";\n  }, []);\n  let list;\n\n  try {\n    list = await sendRequest(`http://localhost:5000/drive`, 'GET', {\n      'Content-Type': 'application/json'\n    });\n    console.log(list);\n  } catch (err) {\n    console.log(\"drive error\\n\" + err);\n  }\n\n  const form = () => {\n    history.push('/form-drive');\n  };\n\n  return (\n    /*#__PURE__*/\n    // <React.Fragment>\n    _jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n        error: error,\n        onClear: clearError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), !auth.isLogedIn && /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          paddingTop: \"5%\",\n          textAlign: \"center\"\n        },\n        children: \" You dont have permission without login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this), auth.isLogedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"DRIVES YOU WANT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), auth.isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tn1\",\n          onClick: form,\n          children: \"Add New Drive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(DriveList, {\n          items: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"bye\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) // </React.Fragment>\n\n  );\n};\n\n_s(Drive, \"1pCgJqp1F+3v4qkrFFm3zcee46k=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = Drive;\nexport default Drive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drive\");","map":{"version":3,"sources":["D:/WEB_MINI_PROJECT/web/ReactJS/src/routes/Drive.js"],"names":["React","useContext","useEffect","AuthContext","LoadingSpinner","useHttpClient","DriveList","ErrorModal","useHistory","Drive","isLoading","error","sendRequest","clearError","auth","document","body","style","background","list","console","log","err","form","history","push","isLogedIn","paddingTop","textAlign","isAdmin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,KAAK,GAAC,YAAU;AAAA;;AAClB,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA,WAAjB;AAA6BC,IAAAA;AAA7B,MAAyCR,aAAa,EAA5D;AACA,QAAMS,IAAI,GAACb,UAAU,CAACE,WAAD,CAArB;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAA+B,MAA/B;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,MAAIC,IAAJ;;AACA,MAAG;AACEA,IAAAA,IAAI,GAAC,MAAMP,WAAW,CAClB,6BADkB,EAEnB,KAFmB,EAGnB;AAAC,sBAAe;AAAhB,KAHmB,CAAtB;AAMGQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACP,GARD,CASA,OAAMG,GAAN,EAAU;AACNF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBC,GAA5B;AACH;;AAED,QAAMC,IAAI,GAAC,MAAI;AACXC,IAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACH,GAFD;;AAMA;AAAA;AACI;AACA;AAAA,iBACCd,KAAK,iBAAI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA,KAAnB;AAA0B,QAAA,OAAO,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,cADV,EAECH,SAAS,iBAAI,QAAC,cAAD;AAAgB,QAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFd,EAGC,CAACI,IAAI,CAACY,SAAN,iBAAmB;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC,IAAZ;AAAiBC,UAAAA,SAAS,EAAC;AAA3B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHpB,EAICd,IAAI,CAACY,SAAL,iBAAkB;AAAA,gCACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADmB,EAElBZ,IAAI,CAACe,OAAL,iBAAgB;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAEN,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGf,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEJ;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAHe,eAIf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJe;AAAA;AAAA;AAAA;AAAA;AAAA,cAJnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAaI;;AAbJ;AAgBH,CA3CD;;GAAMV,K;UAC6CJ,a;;;KAD7CI,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { AuthContext } from '../Hooks/AuthContext';\r\nimport LoadingSpinner from '../UIelements/LoadingSpinner';\r\nimport { useHttpClient } from \"../Hooks/Http-Hook\";\r\nimport \"./Drive.css\"\r\nimport DriveList from \"./DriveList\";\r\nimport ErrorModal from '../UIelements/Error';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Drive=async ()=>{\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const auth=useContext(AuthContext);\r\n    useEffect(()=>{\r\n        document.body.style.background=\"none\"\r\n    },[])\r\n   \r\n    let list;\r\n    try{\r\n         list=await sendRequest(\r\n            `http://localhost:5000/drive`,\r\n            'GET',\r\n            {'Content-Type':'application/json'}\r\n            \r\n            );\r\n            console.log(list);\r\n    }\r\n    catch(err){\r\n        console.log(\"drive error\\n\"+err);\r\n    }\r\n\r\n    const form=()=>{\r\n        history.push('/form-drive');\r\n    } \r\n\r\n   \r\n    \r\n    return(\r\n        // <React.Fragment>\r\n        <div>\r\n        {error && <ErrorModal error={error} onClear={clearError}/>}\r\n        {isLoading && <LoadingSpinner asOverlay/>}\r\n        {!auth.isLogedIn && <h1 style={{paddingTop:\"5%\",textAlign:\"center\"}}> You dont have permission without login</h1>}\r\n        {auth.isLogedIn && <div>\r\n        <h1>DRIVES YOU WANT</h1>\r\n        {auth.isAdmin && <button className=\"tn1\" onClick={form}>Add New Drive</button>}   \r\n            <DriveList items={list}/>\r\n            <h1>bye</h1>\r\n        </div>}\r\n        </div>\r\n        // </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Drive;"]},"metadata":{},"sourceType":"module"}