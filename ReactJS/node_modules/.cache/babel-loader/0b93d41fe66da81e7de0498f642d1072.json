{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\WEB_MINI_PROJECT\\\\web\\\\ReactJS\\\\src\\\\Hooks\\\\Form2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ErrorModal from \"../UIelements/Error\";\nimport LoadingSpinner from \"../UIelements/LoadingSpinner\";\nimport \"./Form.css\";\nimport { useHttpClient } from \"./Http-Hook\";\n\nconst Form2 = () => {\n  _s();\n\n  useEffect(() => {\n    document.body.style.background = \"url('https://www.myamcat.com/blog/wp-content/uploads/2016/02/graduation-hats.jpg') no-repeat center\";\n    document.body.style.backgroundRepeat = \"no-repeat\";\n    document.body.style.backgroundSize = \"cover\";\n    document.body.style.backgroundPosition = \"center\";\n  }, []);\n  const [pass_error, seterror] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError,\n    headers\n  } = useHttpClient();\n  const [header, setHeader] = useState();\n\n  const formHandler = async event => {\n    event.preventDefault();\n    const name = document.getElementById('name').value;\n    const role = document.getElementById('role').value;\n    let link = document.getElementById('link').value;\n    const date = document.getElementById('date').value;\n    const desc = document.getElementById('description').value;\n\n    if (String(name).length === 0) {\n      seterror(\"Company name can not be empty\");\n      setHeader(\"Please fill all data\");\n      return;\n    }\n\n    if (String(role).length === 0) {\n      seterror(\"Job role can not be empty\");\n      setHeader(\"Please fill all data\");\n      return;\n    }\n\n    if (String(link).length === 0) {\n      seterror(\"Link can not be empty\");\n      setHeader(\"Please fill all data\");\n      return;\n    }\n\n    if (String(date).length === 0) {\n      seterror(\"Last date can not be empty\");\n      setHeader(\"Please fill all data\");\n      return;\n    }\n\n    if (String(desc).length === 0) {\n      seterror(\"Description/Criteria can not be empty\");\n      setHeader(\"Please fill all data\");\n      return;\n    }\n\n    try {\n      let data;\n      data = await sendRequest(`http://localhost:5000/drive-upload`, 'POST', {\n        'Content-Type': 'application/json'\n      }, JSON.stringify({\n        name: name,\n        role: role,\n        link: link,\n        date: date,\n        desc: desc\n      }));\n\n      if (data === \"successfull\") {\n        seterror(\"given course stored succefully\");\n        setHeader(\"Successfully Uploaded\");\n      }\n    } catch (err) {\n      seterror(\"Something went wrong, try agian aftre some time\"); // setHeader(\"Successfully Uploaded\")\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [pass_error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      header: header,\n      error: pass_error,\n      onClear: () => {\n        seterror();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      header: headers,\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New Drive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drive-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            id: \"name\",\n            placeholder: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            id: \"role\",\n            placeholder: \"Job Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            id: \"link\",\n            placeholder: \"Link to apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            id: \"date\",\n            placeholder: \"Last date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              \"border\": \"solid 1px white\"\n            },\n            id: \"description\",\n            placeholder: \"Description and Eligibilty criteria\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btns\",\n            style: {\n              textAlign: \"center\"\n            },\n            onClick: formHandler,\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form2, \"jSgwJsFxSNYVsVQKUOjEWt1Axhg=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = Form2;\nexport default Form2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form2\");","map":{"version":3,"sources":["D:/WEB_MINI_PROJECT/web/ReactJS/src/Hooks/Form2.js"],"names":["React","useEffect","useState","ErrorModal","LoadingSpinner","useHttpClient","Form2","document","body","style","background","backgroundRepeat","backgroundSize","backgroundPosition","pass_error","seterror","isLoading","error","sendRequest","clearError","headers","header","setHeader","formHandler","event","preventDefault","name","getElementById","value","role","link","date","desc","String","length","data","JSON","stringify","err","textAlign"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAO,YAAP;AACA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,MAAMC,KAAK,GAAC,MAAI;AAAA;;AACdL,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAgC,qGAAhC;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,gBAApB,GAAqC,WAArC;AACAJ,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBG,cAApB,GAAmC,OAAnC;AACAL,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBI,kBAApB,GAAuC,QAAvC;AACH,GALU,EAKT,EALS,CAAT;AAOE,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAsBb,QAAQ,EAApC;AACA,QAAM;AAACc,IAAAA,SAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA,WAAjB;AAA6BC,IAAAA,UAA7B;AAAwCC,IAAAA;AAAxC,MAAiDf,aAAa,EAApE;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAmBpB,QAAQ,EAAjC;;AAEA,QAAMqB,WAAW,GAAC,MAAOC,KAAP,IAAe;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAEnB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,EAAgCC,KAA5C;AACA,UAAMC,IAAI,GAAEtB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,EAAgCC,KAA5C;AACA,QAAIE,IAAI,GAAEvB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,EAAgCC,KAA1C;AACA,UAAMG,IAAI,GAAExB,QAAQ,CAACoB,cAAT,CAAwB,MAAxB,EAAgCC,KAA5C;AACA,UAAMI,IAAI,GAAEzB,QAAQ,CAACoB,cAAT,CAAwB,aAAxB,EAAuCC,KAAnD;;AAEA,QAAGK,MAAM,CAACP,IAAD,CAAN,CAAaQ,MAAb,KAAsB,CAAzB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,+BAAD,CAAR;AACAO,MAAAA,SAAS,CAAC,sBAAD,CAAT;AACA;AACD;;AACD,QAAGW,MAAM,CAACJ,IAAD,CAAN,CAAaK,MAAb,KAAsB,CAAzB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACAO,MAAAA,SAAS,CAAC,sBAAD,CAAT;AACA;AACD;;AACD,QAAGW,MAAM,CAACH,IAAD,CAAN,CAAaI,MAAb,KAAsB,CAAzB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACAO,MAAAA,SAAS,CAAC,sBAAD,CAAT;AACA;AACD;;AACD,QAAGW,MAAM,CAACF,IAAD,CAAN,CAAaG,MAAb,KAAsB,CAAzB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,4BAAD,CAAR;AACAO,MAAAA,SAAS,CAAC,sBAAD,CAAT;AACA;AACD;;AACD,QAAGW,MAAM,CAACD,IAAD,CAAN,CAAaE,MAAb,KAAsB,CAAzB,EAA4B;AAC1BnB,MAAAA,QAAQ,CAAC,uCAAD,CAAR;AACAO,MAAAA,SAAS,CAAC,sBAAD,CAAT;AACA;AACD;;AACD,QAAG;AACD,UAAIa,IAAJ;AACAA,MAAAA,IAAI,GAAE,MAAMjB,WAAW,CACpB,oCADoB,EAErB,MAFqB,EAGrB;AAAC,wBAAe;AAAhB,OAHqB,EAIrBkB,IAAI,CAACC,SAAL,CAAe;AACPX,QAAAA,IAAI,EAACA,IADE;AAEPG,QAAAA,IAAI,EAACA,IAFE;AAGPC,QAAAA,IAAI,EAACA,IAHE;AAIPC,QAAAA,IAAI,EAACA,IAJE;AAKPC,QAAAA,IAAI,EAACA;AALE,OAAf,CAJqB,CAAvB;;AAYE,UAAGG,IAAI,KAAG,aAAV,EAAwB;AACtBpB,QAAAA,QAAQ,CAAC,gCAAD,CAAR;AACAO,QAAAA,SAAS,CAAC,uBAAD,CAAT;AACD;AACJ,KAlBD,CAmBA,OAAMgB,GAAN,EAAU;AACRvB,MAAAA,QAAQ,CAAC,iDAAD,CAAR,CADQ,CAER;AACD;AACF,GAzDD;;AA2DA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACGD,UAAU,iBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEO,MAApB;AAA4B,MAAA,KAAK,EAAEP,UAAnC;AAA+C,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,QAAQ;AAAG;AAAxE;AAAA;AAAA;AAAA;AAAA,YADjB,EAEKE,KAAK,iBAAI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEG,OAApB;AAA6B,MAAA,KAAK,EAAEH,KAApC;AAA2C,MAAA,OAAO,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,YAFd,EAGKH,SAAS,iBAAI,QAAC,cAAD;AAAgB,MAAA,SAAS;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHlB,eAIJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACF;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADE,eAIF;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,OAA7B;AAAqC,YAAA,EAAE,EAAC,MAAxC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,OAA7B;AAAqC,YAAA,EAAE,EAAC,MAAxC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,OAA7B;AAAqC,YAAA,EAAE,EAAC,MAAxC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,OAA7B;AAAqC,YAAA,EAAE,EAAC,MAAxC;AAA+C,YAAA,WAAW,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAU,YAAA,KAAK,EAAE;AAAC,wBAAS;AAAV,aAAjB;AAA+C,YAAA,EAAE,EAAC,aAAlD;AAAgE,YAAA,WAAW,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAE;AAACuB,cAAAA,SAAS,EAAC;AAAX,aAA7B;AAAmD,YAAA,OAAO,EAAEhB,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJE;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA/FD;;GAAMjB,K;UASqDD,a;;;KATrDC,K;AAiGN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ErrorModal from \"../UIelements/Error\";\r\nimport LoadingSpinner from \"../UIelements/LoadingSpinner\";\r\nimport \"./Form.css\";\r\nimport { useHttpClient } from \"./Http-Hook\";\r\n\r\nconst Form2=()=>{\r\n  useEffect(()=>{\r\n    document.body.style.background= \"url('https://www.myamcat.com/blog/wp-content/uploads/2016/02/graduation-hats.jpg') no-repeat center\";\r\n    document.body.style.backgroundRepeat=\"no-repeat\";\r\n    document.body.style.backgroundSize=\"cover\";\r\n    document.body.style.backgroundPosition=\"center\";\r\n},[]);\r\n\r\n    const [pass_error,seterror]=useState();\r\n    const {isLoading,error,sendRequest,clearError,headers}=useHttpClient();\r\n    const [header,setHeader]=useState();\r\n\r\n    const formHandler=async (event)=>{\r\n      event.preventDefault();\r\n\r\n      const name= document.getElementById('name').value;\r\n      const role= document.getElementById('role').value;\r\n      let link= document.getElementById('link').value;\r\n      const date= document.getElementById('date').value;\r\n      const desc= document.getElementById('description').value;\r\n\r\n      if(String(name).length===0) {\r\n        seterror(\"Company name can not be empty\")\r\n        setHeader(\"Please fill all data\")\r\n        return;\r\n      }\r\n      if(String(role).length===0) {\r\n        seterror(\"Job role can not be empty\")\r\n        setHeader(\"Please fill all data\")\r\n        return;\r\n      }\r\n      if(String(link).length===0) {\r\n        seterror(\"Link can not be empty\")\r\n        setHeader(\"Please fill all data\")\r\n        return;\r\n      }\r\n      if(String(date).length===0) {\r\n        seterror(\"Last date can not be empty\")\r\n        setHeader(\"Please fill all data\")\r\n        return;\r\n      }\r\n      if(String(desc).length===0) {\r\n        seterror(\"Description/Criteria can not be empty\")\r\n        setHeader(\"Please fill all data\")\r\n        return;\r\n      }\r\n      try{\r\n        let data;\r\n        data= await sendRequest(\r\n          `http://localhost:5000/drive-upload`,\r\n          'POST',\r\n          {'Content-Type':'application/json'},\r\n          JSON.stringify({\r\n                  name:name,\r\n                  role:role,\r\n                  link:link,\r\n                  date:date,\r\n                  desc:desc\r\n          }));\r\n\r\n          if(data===\"successfull\"){\r\n            seterror(\"given course stored succefully\")\r\n            setHeader(\"Successfully Uploaded\")\r\n          }\r\n      }\r\n      catch(err){\r\n        seterror(\"Something went wrong, try agian aftre some time\")\r\n        // setHeader(\"Successfully Uploaded\")\r\n      }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n          {pass_error && <ErrorModal header={header} error={pass_error} onClear={()=>{seterror()}}/>} \r\n            {error && <ErrorModal header={headers} error={error} onClear={clearError}/>}\r\n            {isLoading && <LoadingSpinner asOverlay/>}\r\n    <div className=\"wrapper\">\r\n  <div className=\"title\">\r\n    <h1>New Drive</h1>\r\n  </div>\r\n  <div className=\"drive-form\">\r\n    <div className=\"input-fields\">\r\n      <input type=\"text\" className=\"input\" id=\"name\" placeholder=\"Company Name\"/>\r\n      <input type=\"text\" className=\"input\" id=\"role\" placeholder=\"Job Role\"/>\r\n      <input type=\"text\" className=\"input\" id=\"link\" placeholder=\"Link to apply\"/>\r\n      <input type=\"text\" className=\"input\" id=\"date\" placeholder=\"Last date\"/>\r\n\r\n    </div>\r\n    <div className=\"msg\">\r\n      <textarea style={{\"border\":\"solid 1px white\"}} id=\"description\" placeholder=\"Description and Eligibilty criteria\"></textarea>\r\n      <div className=\"btns\" style={{textAlign:\"center\"}} onClick={formHandler}>send</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</React.Fragment>);\r\n}\r\n\r\nexport default Form2;"]},"metadata":{},"sourceType":"module"}