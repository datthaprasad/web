{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\WEB_MINI_PROJECT\\\\web\\\\ReactJS\\\\src\\\\UIelements\\\\Button.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: `button button--${props.size || 'default'} ${props.inverse && 'button--inverse'} ${props.danger && 'button--danger'} ${props.primary && 'button--primary'}`,\n      href: props.href,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.to) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: props.to,\n      exact: props.exact,\n      className: `button button--${props.size || 'default'} ${props.inverse && 'button--inverse'} ${props.danger && 'button--danger'}`,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button button--${props.size || 'default'} ${props.inverse && 'button--inverse'} ${props.danger && 'button--danger'} ${props.primary && 'button--primary'}`,\n    type: props.type,\n    onClick: props.onClick,\n    disabled: props.disabled,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["G:/WEB_MINI_PROJECT/web/ReactJS/src/UIelements/Button.js"],"names":["React","Link","Button","props","href","size","inverse","danger","primary","children","to","exact","type","onClick","disabled"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACd,wBACE;AACE,MAAA,SAAS,EAAG,kBAAiBD,KAAK,CAACE,IAAN,IAAc,SAAU,IAAGF,KAAK,CAACG,OAAN,IACtD,iBAAkB,IAAGH,KAAK,CAACI,MAAN,IAAgB,gBAAiB,IAAGJ,KAAK,CAACK,OAAN,IAAgB,iBAAkB,EAF/F;AAGE,MAAA,IAAI,EAAEL,KAAK,CAACC,IAHd;AAAA,gBAKGD,KAAK,CAACM;AALT;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACD,MAAIN,KAAK,CAACO,EAAV,EAAc;AACZ,wBACE,QAAC,IAAD;AACE,MAAA,EAAE,EAAEP,KAAK,CAACO,EADZ;AAEE,MAAA,KAAK,EAAEP,KAAK,CAACQ,KAFf;AAGE,MAAA,SAAS,EAAG,kBAAiBR,KAAK,CAACE,IAAN,IAAc,SAAU,IAAGF,KAAK,CAACG,OAAN,IACtD,iBAAkB,IAAGH,KAAK,CAACI,MAAN,IAAgB,gBAAiB,EAJ1D;AAAA,gBAMGJ,KAAK,CAACM;AANT;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AACD,sBACE;AACE,IAAA,SAAS,EAAG,kBAAiBN,KAAK,CAACE,IAAN,IAAc,SAAU,IAAGF,KAAK,CAACG,OAAN,IACtD,iBAAkB,IAAGH,KAAK,CAACI,MAAN,IAAgB,gBAAiB,IAAGJ,KAAK,CAACK,OAAN,IAAgB,iBAAkB,EAF/F;AAGE,IAAA,IAAI,EAAEL,KAAK,CAACS,IAHd;AAIE,IAAA,OAAO,EAAET,KAAK,CAACU,OAJjB;AAKE,IAAA,QAAQ,EAAEV,KAAK,CAACW,QALlB;AAAA,cAOGX,KAAK,CAACM;AAPT;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnCD;;KAAMP,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'} ${props.primary&& 'button--primary'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'} ${props.primary&& 'button--primary'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}